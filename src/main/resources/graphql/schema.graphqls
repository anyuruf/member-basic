type MemberInfo {
    [MemberBasic]: nodes
    [Links]: links
}

type MemberBasic {
    ID : id
    firstName : String
    lastName : String
    gender: Gender
    dob : String
}

type MemberBasicInput {
    firstName : String
    lastName : String
    gender: Gender
    dob : String
}

type Link {
    id : ID
    source : String
    target : String
    parent : Parent
}

type LinkInput {
    source : String
    target : String
    parent : Parent
}

enum Parent {
    FATHER
    MOTHER
}

enum Gender {
    MALE
    FEMALE
}

type Query {
    MemberInfo : membersInfo
    [MemberBasic]: nodes
    [Links]: links
}

type Mutation {
    addMember(MemberBasicInput): MemberBasic
    editMemmber(MemberBasic): MemberBasic
    addLink(LinkInput): Link
    addLinks([LinkInput]): [Link]
    editLink(Link): Link
}