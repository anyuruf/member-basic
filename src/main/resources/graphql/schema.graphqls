type MemberBasic {
    ID : id
    firstName : String
    lastName : String
    gender: Gender
    dob : String
}

type MemberBasicInput {
    firstName : String
    lastName : String
    gender: Gender
    dob : String
}

type Link {
    id : ID
    source : String
    target : String
    parent : Parent
}

type LinkInput {
    source : String
    target : String
    parent : Parent
}

enum Parent {
    FATHER
    MOTHER
}

enum Gender {
    MALE
    FEMALE
}

type Query {
     nodes: [MemberBasic]
    links: [Links]
}

type Mutation {
    addMember($memberBasicInput: MemberBasicInput!): MemberBasic
    editMemmber($memberBasic: MemberBasic!): MemberBasic
    addLink($linkInput: LinkInput): Link
    addLinks($links: [LinkInput]): [Link]
    editLink($link: Link): Link
}